buildscript {
	ext {
		kotlinVersion = '1.1.2-5'
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
	compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0'
	compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7"

	//JSOUP
	compile 'org.jsoup:jsoup:1.10.3'

	//Swagger
	compile "io.springfox.ui:springfox-swagger-ui-rfc6570:1.0.0"
	compile "io.springfox:springfox-swagger2:2.6.1"

	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.assertj:assertj-core:3.8.0'
}

jar {
	baseName = 'luggage-lift-backend'
}

task stage {
	dependsOn build
}

task codeCoverageReport(type: JacocoReport) {
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
	sourceDirectories = files(sourceSets.main.allSource.srcDirs)
	classDirectories = files(sourceSets.main.output)
	reports {
		xml.enabled true
		xml.destination "${buildDir}/reports/jacoco/report.xml"
		html.enabled false
		csv.enabled false
	}
}